import Web3 from "web3";
const web3 = new Web3();

const FEVER_TOKEN_PROXY = {
  bytecode:
    "0x608060405234801561001057600080fd5b506040516107c23803806107c283398101604081905261002f9161035a565b818161005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610428565b60008051602061077b833981519152146100785761007861044d565b6100848282600061008d565b505050506104b2565b610096836100c3565b6000825111806100a35750805b156100be576100bc838361010360201b6100291760201c565b505b505050565b6100cc8161012f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610128838360405180606001604052806027815260200161079b602791396101ef565b9392505050565b610142816102cd60201b6100551760201c565b6101a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101ce60008051602061077b83398151915260001b6102dc60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a0565b600080856001600160a01b0316856040516102729190610463565b600060405180830381855af49150503d80600081146102ad576040519150601f19603f3d011682016040523d82523d6000602084013e6102b2565b606091505b5090925090506102c38282866102df565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102ee575081610128565b8251156102fe5782518084602001fd5b8160405162461bcd60e51b81526004016101a0919061047f565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610349578181015183820152602001610331565b838111156100bc5750506000910152565b6000806040838503121561036d57600080fd5b82516001600160a01b038116811461038457600080fd5b60208401519092506001600160401b03808211156103a157600080fd5b818501915085601f8301126103b557600080fd5b8151818111156103c7576103c7610318565b604051601f8201601f19908116603f011681019083821181831017156103ef576103ef610318565b8160405282815288602084870101111561040857600080fd5b61041983602083016020880161032e565b80955050505050509250929050565b60008282101561044857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161047581846020870161032e565b9190910192915050565b602081526000825180602084015261049e81604085016020870161032e565b601f01601f19169190910160400192915050565b6102ba806104c16000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220762643d2c0ef674f46f2ec8f24fd5e70666241d3d52b0cde8fd90a3c8adff94064736f6c63430008090033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
};

function buildCreate2Address(creatorAddress: any, saltHex: any, byteCode: any) {
  // @ts-ignore
  return `0x${web3.utils
    .sha3(`0x${["ff", creatorAddress, saltHex, web3.utils.sha3(byteCode)].map(x => x.replace(/0x/, "")).join("")}`)
    .slice(-40)}`;
}

export default function predictAddress(
  factoryAddress: string,
  implementation: string,
  salt: any,
  initData: any,
  deployerAddress: string,
) {
  const newsalt = web3.utils.soliditySha3(web3.utils.encodePacked(salt, deployerAddress) as string);

  return web3.utils.toChecksumAddress(
    buildCreate2Address(
      factoryAddress,
      newsalt,
      web3.utils.encodePacked(
        FEVER_TOKEN_PROXY.bytecode,
        web3.eth.abi.encodeParameters(["address", "bytes memory"], [implementation, initData]),
      ) as string,
    ),
  );
}
