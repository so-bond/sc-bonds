/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Coupon, CouponInterface } from "../../src/Coupon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registerContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_couponDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nbDays",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_recordDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cutOfTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IRegister",
        name: "register",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "couponDate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "enum Coupon.CouponStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "CouponChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IRegister",
        name: "register",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "couponDate",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Coupon.PaymentStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Coupon.PaymentStatus",
        name: "previousStatus",
        type: "uint8",
      },
    ],
    name: "CouponPaymentStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "couponDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cutOfTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "getInvestorPayments",
    outputs: [
      {
        internalType: "enum Coupon.PaymentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "getPaymentAmountForInvestor",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPaymentAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "investorPayments",
    outputs: [
      {
        internalType: "enum Coupon.PaymentStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nbDays",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payingAgent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "paymentIdForInvest",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recordDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "contract IRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rejectCoupon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_recordDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_cutOfTime",
        type: "uint256",
      },
    ],
    name: "setCutOffTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setDateAsCurrentCoupon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nbDays",
        type: "uint256",
      },
    ],
    name: "setNbDays",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum Coupon.CouponStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_investor",
        type: "address",
      },
    ],
    name: "toggleCouponPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018fe380380620018fe8339810160408190526200003491620002a7565b6001600055600780546001600160a01b0387166001600160a01b0319918216811790925560088054909116821790556040516338e5975560e21b815233600482015263e3965d5490602401602060405180830381865afa1580156200009d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c39190620002fe565b620001275760405162461bcd60e51b815260206004820152602960248201527f53656e646572206d757374206265206120506179696e672063616c63756c61746044820152681a5bdb881859d95b9d60ba1b60648201526084015b60405180910390fd5b6007546040516338e20fc560e11b8152600481018690526001600160a01b03909116906371c41f8a906024016020604051808303816000875af115801562000173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001999190620002fe565b620001e75760405162461bcd60e51b815260206004820152601f60248201527f7468697320636f75706f6e4461746520646f6573206e6f74206578697374730060448201526064016200011e565b6001849055600283905562000200620151808362000329565b6200020c90836200034c565b6003556200021e620151808262000329565b6004908155600580546001600160a01b031916331790556008805460ff60a01b191690819055600160a01b900460ff169081111562000261576200026162000374565b6001546007546040516001600160a01b03909116907fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb76090600090a450505050506200038a565b600080600080600060a08688031215620002c057600080fd5b85516001600160a01b0381168114620002d857600080fd5b602087015160408801516060890151608090990151929a91995097965090945092505050565b6000602082840312156200031157600080fd5b815180151581146200032257600080fd5b9392505050565b6000826200034757634e487b7160e01b600052601260045260246000fd5b500690565b818103818111156200036e57634e487b7160e01b600052601160045260246000fd5b92915050565b634e487b7160e01b600052602160045260246000fd5b611564806200039a6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80637c610024116100a2578063d64c058711610071578063d64c058714610276578063d927a60614610289578063f4bcf209146102b5578063f68a3ab4146102bd578063fd3b4442146102d057600080fd5b80637c6100241461022157806386d49f7714610234578063c4fa96b01461023d578063ccc5d7e91461024657600080fd5b8063532e91cc116100de578063532e91cc146101805780635e4795a9146101f15780636969a06f1461020457806369fb125e1461020e57600080fd5b80631aa3a00814610110578063200d2ed21461014057806323bfa0f01461016157806350cc453214610177575b600080fd5b600754610123906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60085461015490600160a01b900460ff1681565b60405161013791906112be565b6101696102d9565b604051908152602001610137565b61016960035481565b6101d861018e3660046112f0565b6040516bffffffffffffffffffffffff1930606090811b8216602084015283901b166034820152600090604801604051602081830303815290604052805190602001209050919050565b6040516001600160c01b03199091168152602001610137565b600554610123906001600160a01b031681565b61020c610487565b005b61016961021c3660046112f0565b61078d565b61020c61022f366004611314565b61093f565b61016960025481565b61016960015481565b6102696102543660046112f0565b60096020526000908152604090205460ff1681565b6040516101379190611341565b61020c6102843660046112f0565b610a09565b6102696102973660046112f0565b6001600160a01b031660009081526009602052604090205460ff1690565b61020c611067565b61020c6102cb366004611355565b61115c565b61016960045481565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663a7f2f6ec6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190611377565b90506000600760009054906101000a90046001600160a01b03166001600160a01b03166339027f7c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190611377565b90506000600760009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104499190611377565b9050600061016860025484848761046091906113a6565b61046a91906113a6565b61047491906113a6565b61047e91906113d3565b95945050505050565b61048f61124f565b6007546040516338e5975560e21b81523360048201526001600160a01b039091169063e3965d5490602401602060405180830381865afa1580156104d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fb91906113e7565b6105205760405162461bcd60e51b815260040161051790611409565b60405180910390fd5b6000600854600160a01b900460ff166004811115610540576105406112a8565b1461055d5760405162461bcd60e51b815260040161051790611452565b6007546001546040516338e20fc560e11b81526001600160a01b03909216916371c41f8a916105929160040190815260200190565b6020604051808303816000875af11580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d591906113e7565b6106215760405162461bcd60e51b815260206004820152601f60248201527f7468697320636f75706f6e4461746520646f6573206e6f7420657869737473006044820152606401610517565b6007546001546004546003546001600160a01b0390931692633052974c9291610649916114bc565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561068757600080fd5b505af115801561069b573d6000803e3d6000fd5b50505050600860009054906101000a90046001600160a01b03166001600160a01b0316639ef986de6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107169190611377565b6006556008805460ff60a01b1916600160a01b90811791829055900460ff166004811115610746576107466112a8565b6001546007546040516001600160a01b03909116907fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb76090600090a461078b6001600055565b565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663a7f2f6ec6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108079190611377565b90506000600760009054906101000a90046001600160a01b03166001600160a01b03166339027f7c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190611377565b6008546001546040516307b2d9e360e01b81526001600160a01b03888116600483015260248201929092529293506000929116906307b2d9e390604401602060405180830381865afa1580156108dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109009190611377565b9050600061016860025484848761091791906113a6565b61092191906113a6565b61092b91906113a6565b61093591906113d3565b9695505050505050565b6007546040516338e5975560e21b81523360048201526001600160a01b039091169063e3965d5490602401602060405180830381865afa158015610987573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ab91906113e7565b6109c75760405162461bcd60e51b815260040161051790611409565b6000600854600160a01b900460ff1660048111156109e7576109e76112a8565b14610a045760405162461bcd60e51b815260040161051790611452565b600255565b60075460405163c41251a160e01b81526001600160a01b0383811660048301529091169063c41251a190602401602060405180830381865afa158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7791906113e7565b610ac35760405162461bcd60e51b815260206004820152601c60248201527f5468697320696e766573746f72206973206e6f7420616c6c6f776564000000006044820152606401610517565b6001600854600160a01b900460ff166004811115610ae357610ae36112a8565b14610b415760405162461bcd60e51b815260206004820152602860248201527f54686520737461747573206f662074686520636f75706f6e2073686f756c6420604482015267626520526561647960c01b6064820152608401610517565b6001600160a01b03818116600090815260096020526040908190205460075491516321b0fc9560e11b815233600482015260ff909116929190911690634361f92a90602401602060405180830381865afa158015610ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc791906113e7565b15610d55576001600160a01b03821660009081526009602052604081205460ff166002811115610bf957610bf96112a8565b03610c8c576006544211610c5d5760405162461bcd60e51b815260206004820152602560248201527f74686520636f75706f6e20637574206f662074696d6520686173206e6f742070604482015264185cdcd95960da1b6064820152608401610517565b6001600160a01b038216600090815260096020526040902080546001919060ff191682805b0217905550610fff565b60016001600160a01b03831660009081526009602052604090205460ff166002811115610cbb57610cbb6112a8565b03610ce5576001600160a01b0382166000908152600960205260409020805460ff19169055610fff565b6040805162461bcd60e51b81526020600482015260248101919091527f54686520737461747573206f66207468697320696e766573746f72277320706160448201527f796d656e742073686f756c642062652050616964206f7220546f4265506169646064820152608401610517565b600754604051630d72032360e21b81523360048201526001600160a01b03909116906335c80c8c90602401602060405180830381865afa158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc191906113e7565b15610f9c576007546040516308f92f4960e41b81526001600160a01b03848116600483015233921690638f92f49090602401602060405180830381865afa158015610e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3491906114cf565b6001600160a01b031614610e995760405162461bcd60e51b815260206004820152602660248201527f596f7520617265206e6f7420637573746f6469616e206f66207468697320696e6044820152653b32b9ba37b960d11b6064820152608401610517565b60016001600160a01b03831660009081526009602052604090205460ff166002811115610ec857610ec86112a8565b03610ef7576001600160a01b038216600090815260096020526040902080546002919060ff1916600183610c82565b60026001600160a01b03831660009081526009602052604090205460ff166002811115610f2657610f266112a8565b03610f54576001600160a01b038216600090815260096020526040902080546001919060ff19168280610c82565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420436f75706f6e207061796d656e74207374617475730000006044820152606401610517565b60405162461bcd60e51b815260206004820152603260248201527f73656e646572206d7573742062652043656e7472616c204163636f756e74204b60448201527132b2b832b91037b91021bab9ba37b234b0b760711b6064820152608401610517565b6001546007546001600160a01b0380851660008181526009602052604090819020549051919493909216917f71a813fb36e2b43b4fcd5b541937f3501c4bb733759aa470d700efb9b7fd5b149161105b9160ff169087906114ec565b60405180910390a45050565b6007546040516338e5975560e21b81523360048201526001600160a01b039091169063e3965d5490602401602060405180830381865afa1580156110af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d391906113e7565b6110ef5760405162461bcd60e51b815260040161051790611409565b6008805460ff60a01b1916600160a11b1790819055600160a01b900460ff16600481111561111f5761111f6112a8565b6001546007546040516001600160a01b03909116907fee1a084aa36acdbc1c32f808f87c6ef8ae26d4ad59293c32244b1b72466bb76090600090a4565b6007546040516338e5975560e21b81523360048201526001600160a01b039091169063e3965d5490602401602060405180830381865afa1580156111a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c891906113e7565b6111e45760405162461bcd60e51b815260040161051790611409565b6000600854600160a01b900460ff166004811115611204576112046112a8565b146112215760405162461bcd60e51b815260040161051790611452565b61122e6201518083611507565b611238908361151b565b6003556112486201518082611507565b6004555050565b6002600054036112a15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610517565b6002600055565b634e487b7160e01b600052602160045260246000fd5b60208101600583106112d2576112d26112a8565b91905290565b6001600160a01b03811681146112ed57600080fd5b50565b60006020828403121561130257600080fd5b813561130d816112d8565b9392505050565b60006020828403121561132657600080fd5b5035919050565b6003811061133d5761133d6112a8565b9052565b6020810161134f828461132d565b92915050565b6000806040838503121561136857600080fd5b50508035926020909101359150565b60006020828403121561138957600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761134f5761134f611390565b634e487b7160e01b600052601260045260246000fd5b6000826113e2576113e26113bd565b500490565b6000602082840312156113f957600080fd5b8151801515811461130d57600080fd5b60208082526029908201527f53656e646572206d757374206265206120506179696e672063616c63756c61746040820152681a5bdb881859d95b9d60ba1b606082015260800190565b60208082526044908201527f54686520636f75706f6e20646174652063616e206265206d6f6469666965642060408201527f6f6e6c792069662074686520636f6e74726163742073746174757320697320446060820152631c98599d60e21b608082015260a00190565b8082018082111561134f5761134f611390565b6000602082840312156114e157600080fd5b815161130d816112d8565b604081016114fa828561132d565b61130d602083018461132d565b600082611516576115166113bd565b500690565b8181038181111561134f5761134f61139056fea2646970667358221220972859f33c3f91e406c6e581cc4e5b6f589ba269e9e0f7bd0e892bb8d28a17d064736f6c63430008130033";

type CouponConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CouponConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Coupon__factory extends ContractFactory {
  constructor(...args: CouponConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registerContract: AddressLike,
    _couponDate: BigNumberish,
    _nbDays: BigNumberish,
    _recordDate: BigNumberish,
    _cutOfTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _registerContract,
      _couponDate,
      _nbDays,
      _recordDate,
      _cutOfTime,
      overrides || {}
    );
  }
  override deploy(
    _registerContract: AddressLike,
    _couponDate: BigNumberish,
    _nbDays: BigNumberish,
    _recordDate: BigNumberish,
    _cutOfTime: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _registerContract,
      _couponDate,
      _nbDays,
      _recordDate,
      _cutOfTime,
      overrides || {}
    ) as Promise<
      Coupon & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Coupon__factory {
    return super.connect(runner) as Coupon__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CouponInterface {
    return new Interface(_abi) as CouponInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Coupon {
    return new Contract(address, _abi, runner) as unknown as Coupon;
  }
}
