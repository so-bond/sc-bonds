/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrimaryIssuance,
  PrimaryIssuanceInterface,
} from "../../src/PrimaryIssuance";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegister",
        name: "_register",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_offerPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "enum ITrade.Status",
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "NotifyTrade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "PrimaryIssuanceCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDetails",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "quantity",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tradeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ITrade.TradeDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "offerPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentID",
    outputs: [
      {
        internalType: "bytes8",
        name: "",
        type: "bytes8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [
      {
        internalType: "contract IRegister",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reject",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum ITrade.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f4938038062000f4983398101604081905262000034916200031d565b60016000556040516314aa469760e31b81523360048201526001600160a01b0383169063a55234b890602401602060405180830381865afa1580156200007e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000a491906200034e565b620000f55760405162461bcd60e51b815260206004820152601460248201527f53656e646572206d757374206265206120422644000000000000000000000000604482015260640160405180910390fd5b600180546001600160a01b0384166001600160a01b03199182168117835560028054909216331790915560048381556005805460ff1916909317909255604080516310f09fe360e31b8152905191926370a08231928492638784ff1892818101926020929091908290030181865afa15801562000176573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200019c919062000379565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015620001e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000207919062000399565b6003556001600254600154604080516310f09fe360e31b815290516001600160a01b039384169390921691638784ff18916004808201926020929091908290030181865afa1580156200025e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000284919062000379565b6001600160a01b03167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f4600354604051620002c191815260200190565b60405180910390a46040513081527ff3907ebf6f6c38d243f9cbf61f50741cad6bf3507e2be4526ee2a5e1d1e454919060200160405180910390a15050620003b3565b6001600160a01b03811681146200031a57600080fd5b50565b600080604083850312156200033157600080fd5b82516200033e8162000304565b6020939093015192949293505050565b6000602082840312156200036157600080fd5b815180151581146200037257600080fd5b9392505050565b6000602082840312156200038c57600080fd5b8151620003728162000304565b600060208284031215620003ac57600080fd5b5051919050565b610b8680620003c36000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634dc415de116100665780634dc415de146101165780635dab2420146101205780636901f66814610133578063d84ffb411461013b578063fbbf93a01461015657600080fd5b806310547851146100a35780631aa3a008146100c8578063200d2ed2146100db5780633bf19e29146100ee578063489147d714610105575b600080fd5b6100ab6101a4565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b60055460ff166040516100bf9190610abd565b6100f760045481565b6040519081526020016100bf565b6002546001600160a01b03166100ab565b61011e610217565b005b6002546100ab906001600160a01b031681565b61011e610442565b6040516001600160c01b03193060c01b1681526020016100bf565b61015e610906565b6040516100bf9190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b600154604080516310f09fe360e31b815290516000926001600160a01b031691638784ff189160048083019260209291908290030181865afa1580156101ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102129190610ae5565b905090565b6002546001600160a01b031633146102825760405162461bcd60e51b815260206004820152602360248201527f6f6e6c79207468652062656e6566696369617279204226442063616e20726576604482015262195c9d60ea1b60648201526084015b60405180910390fd5b6005805460ff19166002179055600154604080516310f09fe360e31b815290516001600160a01b03909216916370a08231918391638784ff18916004808201926020929091908290030181865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103059190610ae5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610349573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036d9190610b15565b6003556005805460ff169081111561038757610387610aa7565b600254600154604080516310f09fe360e31b815290516001600160a01b039384169390921691638784ff18916004808201926020929091908290030181865afa1580156103d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fc9190610ae5565b6001600160a01b03167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f460035460405161043891815260200190565b60405180910390a4565b61044a610a4e565b6001546040516314aa469760e31b81523360048201526001600160a01b039091169063a55234b890602401602060405180830381865afa158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190610b2e565b6104f95760405162461bcd60e51b815260206004820152601460248201527314d95b99195c881b5d5cdd08189948184810899160621b6044820152606401610279565b6002546001600160a01b031633146105645760405162461bcd60e51b815260206004820152602860248201527f6f6e6c79207468652062656e6566696369617279204226442073686f756c642060448201526766696e616c697a6560c01b6064820152608401610279565b60036005805460ff169081111561057d5761057d610aa7565b141580156105a2575060046005805460ff169081111561059f5761059f610aa7565b14155b6106085760405162461bcd60e51b815260206004820152603160248201527f546865207072696d61727920636f6e74726163742073686f756c6420626520696044820152706e20696e6974696174656420737461746560781b6064820152608401610279565b600154604080516310f09fe360e31b815290516001600160a01b03909216916370a08231918391638784ff18916004808201926020929091908290030181865afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610ae5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190610b15565b6003819055156108fa57600154604080516310f09fe360e31b815290516001600160a01b03909216916323b872dd918391638784ff18916004808201926020929091908290030181865afa158015610742573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107669190610ae5565b60025460035460405160e085901b6001600160e01b03191681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af11580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e49190610b2e565b6108305760405162461bcd60e51b815260206004820152601760248201527f746865207472616e7366657220686173206661696c65640000000000000000006044820152606401610279565b6005805460ff19166003908117909155600254600154604080516310f09fe360e31b815290516001600160a01b039384169390921691638784ff18916004808201926020929091908290030181865afa158015610891573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b59190610ae5565b6001600160a01b03167fb04efa95c2e317d8afba4237350a971f1ce59ef6fbbf2eb3f1a7e3f3f106a8f46003546040516108f191815260200190565b60405180910390a45b6109046001600055565b565b6109416040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6040805160a08101825260035481526002546001600160a01b03908116602080840191909152600154845163b90c1dbb60e01b81528551600096860194929092169263b90c1dbb926004808401938290030181865afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190610b15565b815260015460408051632877d47360e01b815290516020938401936001600160a01b0390931692632877d47392600480820193918290030181865afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190610b15565b815260045460209091015292915050565b600260005403610aa05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610279565b6002600055565b634e487b7160e01b600052602160045260246000fd5b6020810160068310610adf57634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215610af757600080fd5b81516001600160a01b0381168114610b0e57600080fd5b9392505050565b600060208284031215610b2757600080fd5b5051919050565b600060208284031215610b4057600080fd5b81518015158114610b0e57600080fdfea264697066735822122008de3a7ef4bac9f0f173a4562281a3a1b42237f54e5932fb9828c1da557ba4d264736f6c63430008130033";

type PrimaryIssuanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrimaryIssuanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrimaryIssuance__factory extends ContractFactory {
  constructor(...args: PrimaryIssuanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _register: AddressLike,
    _offerPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_register, _offerPrice, overrides || {});
  }
  override deploy(
    _register: AddressLike,
    _offerPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_register, _offerPrice, overrides || {}) as Promise<
      PrimaryIssuance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrimaryIssuance__factory {
    return super.connect(runner) as PrimaryIssuance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrimaryIssuanceInterface {
    return new Interface(_abi) as PrimaryIssuanceInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrimaryIssuance {
    return new Contract(address, _abi, runner) as unknown as PrimaryIssuance;
  }
}
