/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { RsaVerify, RsaVerifyInterface } from "../../src/RsaVerify";

const _abi = [
  {
    inputs: [],
    name: "MY_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_sha256",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_s",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_e",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_m",
        type: "bytes",
      },
    ],
    name: "pkcs1Sha256",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_s",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_e",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_m",
        type: "bytes",
      },
    ],
    name: "pkcs1Sha256Raw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576108db908161001b8239f35b5f80fdfe6080604052600480361015610012575f80fd5b5f90813560e01c9182631e8dc8881461004a57505080633a756cec1461004557633a8d43b314610040575f80fd5b610206565b6101d8565b346100e65760803660031901126100e65767ffffffffffffffff82358181116100f15761007a903690850161018e565b926024358281116100ed57610092903690830161018e565b916044358181116100e9576100aa903690840161018e565b936064359182116100e6576100e26100d08787876100ca36888a0161018e565b9261086a565b60405190151581529081906020820190565b0390f35b80fd5b8480fd5b8380fd5b8280fd5b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761012b57604052565b6100f5565b60405190610220820182811067ffffffffffffffff82111761012b57604052565b604051906101e0820182811067ffffffffffffffff82111761012b57604052565b67ffffffffffffffff811161012b57601f01601f191660200190565b81601f820112156101d4578035906101a582610172565b926101b36040519485610109565b828452602083830101116101d457815f926020809301838601378301015290565b5f80fd5b346101d4575f3660031901126101d4576020604051735f93c56ab56ce17c390a222659bbc4b1fa1839748152f35b346101d45760803660031901126101d45767ffffffffffffffff6024358181116101d45761023890369060040161018e565b906044358181116101d45761025190369060040161018e565b916064359182116101d45760209261027061027993369060040161018e565b91600435610445565b6040519015158152f35b908151915f5b838110610299575050015f815290565b8060208092840101518185015201610289565b926102f3946102df6102df926102e595999894996040519a8b9860208a0152604089015260608801526080870190610283565b90610283565b03601f198101845283610109565b565b906102ff82610172565b61030c6040519182610109565b828152809261031d601f1991610172565b0190602036910137565b634e487b7160e01b5f52601160045260245ffd5b60311981019190821161034a57565b610327565b602f1981019190821161034a57565b60041981019190821161034a57565b601f1981019190821161034a57565b9190820391821161034a57565b634e487b7160e01b5f52603260045260245ffd5b8051156103aa5760200190565b610389565b8051600110156103aa5760210190565b9081518110156103aa570160200190565b5f19811461034a5760010190565b600201908160021161034a57565b600301908160031161034a57565b600401908160041161034a57565b600501908160051161034a57565b9190820180921161034a57565b90600f8110156103aa5760051b0190565b9060118110156103aa5760051b0190565b909192610450610130565b603081529283926020918285016104679060319052565b60306040860152600d606086015260066080860152600960a0860152606060c0860152608660e086015283610100978887016104a39060489052565b6101208088016104b39060019052565b6101408089016104c39060659052565b610160808a016104d39060039052565b61018090818b016104e49060049052565b6101a092838c016104f59060029052565b6101c094858d016105069060019052565b60056101e08e01525f610200819f015261051e610151565b603081529e8f90602f828e015260306040830152600b606083015260066080830152600960a0830152606060c0830152608660e083015260489082015260019101526065908e01526003908d01526004908c01526002908b01526001908a0152825192815183519061058f956102ac565b80519351809161059e826102f5565b958587019186016107cf195a01600590fa506105b98161033b565b6105c390856103bf565b5160f81c603103610828576105ec6105e76105e292601193849161035e565b61037c565b61036d565b9060ff60f81b958661060e6106008861039d565b516001600160f81b03191690565b161580159061080d575b6107b35760025b610628846103de565b81101561066d578761064d610640610600848b6103bf565b6001600160f81b03191690565b036106605761065b906103d0565b61061f565b5050505050505050905090565b509091929594939761068d610640610600610687876103de565b886103bf565b6107b357601183036107bf5750865b8281106107605750505b600160fa1b846106ca6106006106c4856106bf886103ec565b610416565b876103bf565b161480159061073e575b61073457855b8781106106ee575050505050505050600190565b61070b610600610705836106bf866106bf89610408565b866103bf565b858088841a60f81b1691160361072957610724906103d0565b6106da565b505050505050905090565b5050505050905090565b50600160fd1b846107586106006106c4856106bf886103fa565b1614156106d4565b6107736106006106c4836106bf886103ec565b8661079e61064061078e6107878688610434565b5160ff1690565b60f81b6001600160f81b03191690565b9116036107b3576107ae906103d0565b61069c565b50505050505050905090565b9050865b8281106107d15750506106a6565b6107e46106006106c4836106bf886103ec565b866107f861064061078e6107878688610423565b9116036107b357610808906103d0565b6107c3565b50600160f81b87610820610600896103af565b161415610618565b602f61085161084b61084561060061083f8661034f565b896103bf565b60f81c90565b60ff1690565b03610734576105ec6105e76105e292600f93849161035e565b5f6108816020929594939560405191828092610283565b039060025afa1561089a57610897925f51610445565b90565b6040513d5f823e3d90fdfea2646970667358221220ab101a1fbde3a97875815eb7731b6c2a88c974d47148a62a6ef3ef211eba628864736f6c63430008140033";

type RsaVerifyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RsaVerifyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RsaVerify__factory extends ContractFactory {
  constructor(...args: RsaVerifyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RsaVerify & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RsaVerify__factory {
    return super.connect(runner) as RsaVerify__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RsaVerifyInterface {
    return new Interface(_abi) as RsaVerifyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RsaVerify {
    return new Contract(address, _abi, runner) as unknown as RsaVerify;
  }
}
